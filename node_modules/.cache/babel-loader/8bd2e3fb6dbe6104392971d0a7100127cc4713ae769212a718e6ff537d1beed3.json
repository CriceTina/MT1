{"ast":null,"code":"document.addEventListener('DOMContentLoaded', function () {\n  const loginForm = document.querySelector('form');\n  loginForm.addEventListener('submit', function (event) {\n    event.preventDefault(); // 阻止表单默认提交行为\n\n    const username = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n\n    // 创建登录请求\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        // 登录成功，跳转到管理系统页面\n        window.location.href = '/admin';\n      } else {\n        // 登录失败，显示错误信息\n        alert(data.message);\n      }\n    }).catch(error => {\n      console.error('登录请求失败:', error);\n      alert('登录请求失败，请稍后再试');\n    });\n  });\n});\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      // 在这里处理登录逻辑，例如发送请求到后端验证用户名和密码\n\n      console.log('登录信息', this.loginForm);\n      // 这里可以添加验证成功后跳转到管理系统的逻辑\n    }\n  }\n};","map":{"version":3,"names":["document","addEventListener","loginForm","querySelector","event","preventDefault","username","getElementById","value","password","fetch","method","headers","body","encodeURIComponent","then","response","json","data","status","window","location","href","alert","message","catch","error","console","name","methods","handleLogin","log"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <div class=\"login-form\">\r\n        <h2>管理员登录</h2>\r\n        <form @submit.prevent=\"handleLogin\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">用户名：</label>\r\n            <input type=\"text\" id=\"username\" v-model=\"loginForm.username\" placeholder=\"请输入用户名\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">密码：</label>\r\n            <input type=\"password\" id=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button type=\"submit\">登录</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    const loginForm = document.querySelector('form');\r\n\r\n    loginForm.addEventListener('submit', function(event) {\r\n        event.preventDefault(); // 阻止表单默认提交行为\r\n\r\n        const username = document.getElementById('username').value;\r\n        const password = document.getElementById('password').value;\r\n\r\n        // 创建登录请求\r\n        fetch('/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.status === 'success') {\r\n                // 登录成功，跳转到管理系统页面\r\n                window.location.href = '/admin';\r\n            } else {\r\n                // 登录失败，显示错误信息\r\n                alert(data.message);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('登录请求失败:', error);\r\n            alert('登录请求失败，请稍后再试');\r\n        });\r\n    });\r\n});\r\n  export default {\r\n    name: 'Login',\r\n    data() {\r\n      return {\r\n        loginForm: {\r\n          username: '',\r\n          password: ''\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      handleLogin() {\r\n        // 在这里处理登录逻辑，例如发送请求到后端验证用户名和密码\r\n\r\n        console.log('登录信息', this.loginForm);\r\n        // 这里可以添加验证成功后跳转到管理系统的逻辑\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .login-form {\r\n    width: 300px;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  input[type=\"password\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAsBAA,QAAA,CAAAC,gBAAA;EACA,MAAAC,SAAA,GAAAF,QAAA,CAAAG,aAAA;EAEAD,SAAA,CAAAD,gBAAA,qBAAAG,KAAA;IACAA,KAAA,CAAAC,cAAA;;IAEA,MAAAC,QAAA,GAAAN,QAAA,CAAAO,cAAA,aAAAC,KAAA;IACA,MAAAC,QAAA,GAAAT,QAAA,CAAAO,cAAA,aAAAC,KAAA;;IAEA;IACAE,KAAA;MACAC,MAAA;MACAC,OAAA;QACA;MACA;MACAC,IAAA,cAAAC,kBAAA,CAAAR,QAAA,cAAAQ,kBAAA,CAAAL,QAAA;IACA,GACAM,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAG,IAAA;MACA,IAAAA,IAAA,CAAAC,MAAA;QACA;QACAC,MAAA,CAAAC,QAAA,CAAAC,IAAA;MACA;QACA;QACAC,KAAA,CAAAL,IAAA,CAAAM,OAAA;MACA;IACA,GACAC,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACAH,KAAA;IACA;EACA;AACA;AACA;EACAK,IAAA;EACAV,KAAA;IACA;MACAhB,SAAA;QACAI,QAAA;QACAG,QAAA;MACA;IACA;EACA;EACAoB,OAAA;IACAC,YAAA;MACA;;MAEAH,OAAA,CAAAI,GAAA,cAAA7B,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}